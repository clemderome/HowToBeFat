{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/recipeSearch/DisplayResults/RecipeIngredients.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './RecipeIngredients.css';\n\nconst RecipeIngredients = props => {\n  const [isTooBig, setIsTooBig] = useState(false);\n  const [isDisplay, setIsDisplay] = useState(false); // Define if the height of the div is too small to display all ingredients list\n\n  useEffect(() => {\n    const ingredientsListHeight = document.getElementById(\"ingredientResultList\");\n    const height = parseFloat(getComputedStyle(ingredientsListHeight).height) / 16;\n    height === 10 && setIsTooBig(true);\n  }, [isTooBig]);\n\n  const handleClick = () => {\n    setIsDisplay(!isDisplay);\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"recipeIngredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"borderDeco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Ingredients:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"ingredientResultList\",\n    className: isTooBig && isDisplay ? \"list overflow\" : \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, props.ingredients.map((ingredient, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, ingredient))), isTooBig && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"viewMore\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, !isDisplay ? \"Display more...\" : \"Display less...\")));\n};\n\nRecipeIngredients.prototype = {\n  ingredients: PropTypes.array.isRequired\n};\nexport default RecipeIngredients;","map":{"version":3,"sources":["/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/recipeSearch/DisplayResults/RecipeIngredients.js"],"names":["React","useState","useEffect","PropTypes","RecipeIngredients","props","isTooBig","setIsTooBig","isDisplay","setIsDisplay","ingredientsListHeight","document","getElementById","height","parseFloat","getComputedStyle","handleClick","ingredients","map","ingredient","id","prototype","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,yBAAP;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C,CAHmC,CAKnC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,qBAAqB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,CAA9B;AACA,UAAMC,MAAM,GAAGC,UAAU,CAACC,gBAAgB,CAACL,qBAAD,CAAhB,CAAwCG,MAAzC,CAAV,GAA6D,EAA5E;AACAA,IAAAA,MAAM,KAAK,EAAX,IAAiBN,WAAW,CAAC,IAAD,CAA5B;AACD,GAJQ,EAIN,CAACD,QAAD,CAJM,CAAT;;AAMA,QAAMU,WAAW,GAAG,MAAM;AACxBP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAI,IAAA,EAAE,EAAC,sBAAP;AAA8B,IAAA,SAAS,EAAEF,QAAQ,IAAIE,SAAZ,GAAwB,eAAxB,GAA0C,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,KAAK,CAACY,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,UAAD,EAAaC,EAAb,kBACpB;AAAI,IAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,UAAd,CADF,CAFJ,CAHF,EAUGb,QAAQ,iBACP,uDACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEU,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiD,CAACR,SAAD,GAAa,iBAAb,GAAiC,iBAAlF,CADF,CAXJ,CADF;AAkBD,CAlCD;;AAoCAJ,iBAAiB,CAACiB,SAAlB,GAA8B;AAC5BJ,EAAAA,WAAW,EAAEd,SAAS,CAACmB,KAAV,CAAgBC;AADD,CAA9B;AAGA,eAAenB,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './RecipeIngredients.css'\n\nconst RecipeIngredients = (props) => {\n\n  const [isTooBig, setIsTooBig] = useState(false)\n  const [isDisplay, setIsDisplay] = useState(false)\n\n  // Define if the height of the div is too small to display all ingredients list\n  useEffect(() => {\n    const ingredientsListHeight = document.getElementById(\"ingredientResultList\")\n    const height = parseFloat(getComputedStyle(ingredientsListHeight).height) / 16\n    height === 10 && setIsTooBig(true)\n  }, [isTooBig])\n\n  const handleClick = () => {\n    setIsDisplay(!isDisplay)\n  }\n\n  return (\n    <article className=\"recipeIngredients\">\n      <h4 className=\"borderDeco\">Ingredients:</h4>\n      <div className=\"\"></div>\n      <ul id=\"ingredientResultList\" className={isTooBig && isDisplay ? \"list overflow\" : \"list\"}>\n        {\n          props.ingredients.map((ingredient, id) =>\n            <li key={id}>{ingredient}</li>\n          )\n        }\n      </ul>\n      {isTooBig &&\n        <>\n          <div className=\"viewMore\" onClick={handleClick}>{!isDisplay ? \"Display more...\" : \"Display less...\"}</div>\n        </>\n      }\n    </article >\n  )\n}\n\nRecipeIngredients.prototype = {\n  ingredients: PropTypes.array.isRequired\n}\nexport default RecipeIngredients"]},"metadata":{},"sourceType":"module"}