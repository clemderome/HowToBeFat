{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/RecipeCard.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport RecipeSearch from './RecipeSearch';\nimport DisplayRecipe from './DisplayRecipe';\n\nclass RecipeCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recipe: '',\n      ingredients: [],\n      UserChoice: false,\n      page: '',\n      ingredient1: \"\",\n      ingredient2: \"\",\n      ingredient3: \"\",\n      errorIngredient: \"\"\n    };\n\n    this.randomNumber = max => Math.floor(Math.random() * Math.floor(max));\n\n    this.submitForm = e => {\n      e.preventDefault();\n      this.getRecipe(this.state.ingredient1, this.state.ingredient2, this.state.ingredient3);\n      console.log(this.state.ingredient1, \"ingredient1\");\n      console.log(this.state.ingredient2, \"ingredient2\");\n      console.log(this.state.ingredient3, \"ingredient3\");\n    };\n\n    this.getOtherRecipe = () => {\n      this.getRecipe();\n    };\n\n    this.handleChange = e => {\n      let userIngredient1 = e.target.id === \"firstIngredient\" ? e.target.value : this.state.ingredient1;\n      let userIngredient2 = e.target.id === \"secondIngredient\" ? e.target.value : this.state.ingredient2;\n      let userIngredient3 = e.target.id === \"thirdIngredient\" ? e.target.value : this.state.ingredient3;\n      this.setState({\n        ingredient1: userIngredient1,\n        ingredient2: userIngredient2,\n        ingredient3: userIngredient3\n      }); // console.log(this.state.ingredient3)\n    };\n  }\n\n  getRecipe(ingredient1, ingredient2, ingredient3) {\n    let selectedIngredients = \"cheese\";\n    const allIngredient = ingredient1 && `${ingredient1},${ingredient2}`;\n    const min = 0;\n    const max = min + 50;\n    const minCalories = 5000;\n    const maxCalories = 10000;\n    const customIngredient = allIngredient ? allIngredient : selectedIngredients;\n    let url = `https://api.edamam.com/search?q=${customIngredient}&from=${min}&to=${max}&calories=${minCalories}-${maxCalories}&app_id=812f083c&app_key=57cd06930f1a1d5818380b512897cc58`;\n    axios.get(url).then(res => {\n      const randomNum = this.randomNumber(max); // base of the calls\n\n      const res1 = res.data.hits; //sort by calories desc\n\n      const thisCalories = res1.map(x => x.recipe.calories).sort((a, b) => b - a)[randomNum]; // Search for the recipe whom match with the max of calories\n\n      const objectUri = res1.filter(x => x.recipe.calories === thisCalories)[0]; // Define the state with the research recipe and the ingredients which go with\n\n      this.setState({\n        recipe: objectUri.recipe,\n        ingredients: objectUri.recipe.ingredientLines,\n        ingredient1: '',\n        ingredient2: '',\n        ingredient3: '',\n        errorIngredient: \"\"\n      });\n    }).catch(error => this.setState({\n      errorIngredient: \"Erreur dans la saie des ingrÃ©dients\"\n    }));\n  }\n\n  getPreparationTime(time) {\n    const hours = time > 60 ? Math.floor(time / 60) : 0;\n    const unity = hours > 1 ? \"hours\" : \"hour\";\n    const minutes = time > 60 ? time % 60 : time;\n    return time > 60 ? `${hours} ${unity} and ${minutes} minutes` : `${minutes} minutes`;\n  }\n\n  componentDidMount() {\n    this.getRecipe();\n  }\n\n  render() {\n    const totalTime = this.state.recipe.totalTime;\n    const calories = Math.round(this.state.recipe.calories);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RecipeCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RecipeSearch, {\n      handleChange: this.handleChange,\n      submitForm: this.submitForm,\n      errorIngredient: this.state.errorIngredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DisplayRecipe, {\n      getOtherRecipe: this.getOtherRecipe,\n      ingredientsList: this.state.ingredients,\n      recipe: this.state.recipe,\n      preparationTime: this.getPreparationTime(totalTime),\n      calories: calories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default RecipeCard;","map":{"version":3,"sources":["/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/RecipeCard.js"],"names":["React","axios","RecipeSearch","DisplayRecipe","RecipeCard","Component","state","recipe","ingredients","UserChoice","page","ingredient1","ingredient2","ingredient3","errorIngredient","randomNumber","max","Math","floor","random","submitForm","e","preventDefault","getRecipe","console","log","getOtherRecipe","handleChange","userIngredient1","target","id","value","userIngredient2","userIngredient3","setState","selectedIngredients","allIngredient","min","minCalories","maxCalories","customIngredient","url","get","then","res","randomNum","res1","data","hits","thisCalories","map","x","calories","sort","a","b","objectUri","filter","ingredientLines","catch","error","getPreparationTime","time","hours","unity","minutes","componentDidMount","render","totalTime","round"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport RecipeSearch from './RecipeSearch'\nimport DisplayRecipe from './DisplayRecipe'\n\nclass RecipeCard extends React.Component {\n\n  state = {\n    recipe: '',\n    ingredients: [],\n    UserChoice: false,\n    page: '',\n    ingredient1: \"\",\n    ingredient2: \"\",\n    ingredient3: \"\",\n    errorIngredient: \"\"\n  }\n\n  getRecipe(ingredient1, ingredient2, ingredient3) {\n\n    let selectedIngredients = \"cheese\"\n    const allIngredient = ingredient1 && `${ingredient1},${ingredient2}`\n    const min = 0\n    const max = min + 50\n    const minCalories = 5000\n    const maxCalories = 10000\n    const customIngredient = allIngredient ? allIngredient : selectedIngredients\n    let url = `https://api.edamam.com/search?q=${customIngredient}&from=${min}&to=${max}&calories=${minCalories}-${maxCalories}&app_id=812f083c&app_key=57cd06930f1a1d5818380b512897cc58`\n\n    axios.get(url)\n      .then((res) => {\n        const randomNum = this.randomNumber(max)\n        // base of the calls\n        const res1 = res.data.hits\n        //sort by calories desc\n        const thisCalories = res1.map(x => x.recipe.calories).sort((a, b) => b - a)[randomNum]\n        // Search for the recipe whom match with the max of calories\n        const objectUri = res1.filter(x => x.recipe.calories === thisCalories)[0]\n        // Define the state with the research recipe and the ingredients which go with\n        this.setState({\n          recipe: objectUri.recipe,\n          ingredients: objectUri.recipe.ingredientLines,\n          ingredient1: '',\n          ingredient2: '',\n          ingredient3: '',\n          errorIngredient:\"\"\n        })})\n      .catch(error => this.setState({ errorIngredient: \"Erreur dans la saie des ingrÃ©dients\"}))\n\n  }\n\n  randomNumber = (max) => Math.floor(Math.random() * Math.floor(max))\n\n  getPreparationTime(time) {\n    const hours = time > 60 ? Math.floor(time / 60) : 0\n    const unity = hours > 1 ? \"hours\" : \"hour\"\n    const minutes = time > 60 ? time % 60 : time\n    return time > 60 ? `${hours} ${unity} and ${minutes} minutes` : `${minutes} minutes`\n  }\n\n  submitForm = (e) => {\n    e.preventDefault()\n    this.getRecipe(this.state.ingredient1, this.state.ingredient2, this.state.ingredient3)\n    console.log(this.state.ingredient1, \"ingredient1\")\n    console.log(this.state.ingredient2, \"ingredient2\")\n    console.log(this.state.ingredient3, \"ingredient3\")\n  }\n  getOtherRecipe = () => {\n    this.getRecipe()\n  }\n\n  handleChange = (e) => {\n    let userIngredient1 = e.target.id === \"firstIngredient\" ? e.target.value : this.state.ingredient1\n    let userIngredient2 = e.target.id === \"secondIngredient\" ? e.target.value : this.state.ingredient2\n    let userIngredient3 = e.target.id === \"thirdIngredient\" ? e.target.value : this.state.ingredient3\n\n    this.setState({\n      ingredient1: userIngredient1,\n      ingredient2: userIngredient2,\n      ingredient3: userIngredient3\n    })\n    // console.log(this.state.ingredient3)\n  }\n\n\n\n  componentDidMount() {\n    this.getRecipe()\n  }\n\n  render() {\n    const totalTime = this.state.recipe.totalTime\n    const calories = Math.round(this.state.recipe.calories)\n\n    return (\n      <div className=\"RecipeCard\" >\n        <RecipeSearch handleChange={this.handleChange} submitForm={this.submitForm} errorIngredient={this.state.errorIngredient}/>\n        <DisplayRecipe getOtherRecipe={this.getOtherRecipe} ingredientsList={this.state.ingredients} recipe={this.state.recipe} preparationTime={this.getPreparationTime(totalTime)} calories={calories} />\n      </div>\n    );\n  }\n}\n\nexport default RecipeCard"]},"metadata":{},"sourceType":"module"}