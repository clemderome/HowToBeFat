{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/RecipeSearch.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst intolerable = [\"gluten-free\", \"wheat-free\", \"egg-free\", \"peanut-free\", \"tree-nut-free\", \"soy-free\", \"fish-free\", \"shellfish-free\", \"pork-free\", \"sesame-free\", \"alcohol-free\", \"sulphite-free\", \"dairy-free\"];\nconst specialDiet = [\"vegetarian\", \"pescatarian\", \"kosher\", \"vegan\"];\n\nconst RecipeSearch = () => {\n  const [numOfResult, setNumOfResult] = useState(0);\n  const [userIngredient1, setUserIngredient1] = useState('');\n  const [userIngredient2, setUserIngredient2] = useState('');\n  const [userIngredient3, setUserIngredient3] = useState('');\n  const [userCalories, setUserCalories] = useState(0);\n  const [userDiets, setUserDiets] = useState('');\n  const [errorRequest, setErrorRequest] = useState(false);\n  const [recipe, SetRecipes] = useState([]); // Generate a random number\n\n  const getRandomNumber = max => Math.floor(Math.random() * Math.floor(max)); //Define the range of search for the api request\n\n\n  const defineRangeNumber = nbResults => {\n    console.log(nbResults, \"firstresult\");\n    const rangewidth = 10;\n    const numberToRandom = getRandomNumber(Math.ceil(nbResults / rangewidth));\n    console.log(numberToRandom, \"numberRandom\");\n    const max = numberToRandom * rangewidth + rangewidth > nbResults ? nbResults - 1 : numberToRandom * rangewidth + rangewidth;\n    console.log(max, \"max\");\n    const min = max - rangewidth < 0 ? 0 : max - rangewidth;\n    return `&from=${min}&to=${max}`;\n  };\n\n  const defineRequestUrl = nbResults => {\n    nbResults = nbResults > 100 ? 100 : nbResults;\n    const calories = userCalories && `&calories=${userCalories}`;\n    const ingredients = userIngredient1 && `${userIngredient1},${userIngredient2},${userIngredient3}`;\n    const diet = userDiets && `&health=${userDiets}`;\n    console.log(diet, \"diet\");\n    const rangeRequest = nbResults ? defineRangeNumber(nbResults) : ''; // url which will be send to the API request\n\n    return `https://api.edamam.com/search?q=${ingredients}${calories}${rangeRequest}${diet}&app_id=812f083c&app_key=57cd06930f1a1d5818380b512897cc58`;\n  }; // We verify if the number of results are define\n\n\n  const callApi = url => numOfResult === 0 ? getNumRecipes(url) : getApiDatas(url); // If the number of result is unknown, we go fetch it\n\n\n  const getNumRecipes = url => {\n    axios.get(url).then(res => {\n      console.log(res.data.count, \"first\");\n      setNumOfResult(res.data.count);\n      getApiDatas(defineRequestUrl(res.data.count));\n    }).catch(e => setErrorRequest(\"Error, please check your ingredients\"));\n  }; // Else we fetch the datas\n\n\n  const getApiDatas = url => {\n    axios.get(url).then(res => {\n      console.log(res.data.hits, \"hits\");\n      SetRecipes(res.data.hits);\n    });\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    callApi(defineRequestUrl());\n  };\n\n  const handleChange = e => {\n    const value = e.target.value.toLowerCase();\n\n    switch (e.target.id) {\n      case \"userIngredient1\":\n        setUserIngredient1(value);\n        break;\n\n      case \"userIngredient2\":\n        setUserIngredient2(value);\n        break;\n\n      case \"userIngredient3\":\n        setUserIngredient3(value);\n        break;\n\n      case \"userCalories\":\n        setUserCalories(e.target.value);\n        break;\n\n      case \"specialDiets\":\n        setUserDiets(e.target.value);\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipeSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Recipe by ingredient\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"What do you have in your fridge?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredientSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    class: \"form-example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userIngredient1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    id: \"userIngredient1\",\n    type: \"text\",\n    placeholder: \"first ingredient\",\n    required: true,\n    pattern: \"[A-Za-z]+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userIngredient2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    id: \"userIngredient2\",\n    type: \"text\",\n    placeholder: \"second ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userIngredient3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    id: \"userIngredient3\",\n    type: \"text\",\n    placeholder: \"third ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, errorRequest), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"specialDiets\",\n    name: \"specialDiets\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Specify a special diet\"), specialDiet.map(diet => /*#__PURE__*/React.createElement(\"option\", {\n    key: diet,\n    value: diet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 40\n    }\n  }, diet))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"intolerable\",\n    name: \"intolerable\",\n    multiple: true,\n    size: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"If intolerable\"), intolerable.map(diet => /*#__PURE__*/React.createElement(\"option\", {\n    key: diet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 40\n    }\n  }, diet)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userCalories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Number of minimum calories:\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"range\",\n    id: \"userCalories\",\n    name: \"userCalories\",\n    min: \"0\",\n    max: \"10000\",\n    step: \"5000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), userCalories, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, numOfResult, \" recettes trouv\\xE9es !\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"submit\",\n    type: \"submit\",\n    value: \"Get recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }\n  }))), recipe[0] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Other recipes\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, recipe && recipe.map((e, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 52\n    }\n  }, e.recipe.label)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, recipe[0].recipe.label), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: recipe[0].recipe.image,\n    alt: recipe[0].recipe.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }\n  })))));\n};\n\nexport default RecipeSearch;","map":{"version":3,"sources":["/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/RecipeSearch.js"],"names":["React","useState","axios","intolerable","specialDiet","RecipeSearch","numOfResult","setNumOfResult","userIngredient1","setUserIngredient1","userIngredient2","setUserIngredient2","userIngredient3","setUserIngredient3","userCalories","setUserCalories","userDiets","setUserDiets","errorRequest","setErrorRequest","recipe","SetRecipes","getRandomNumber","max","Math","floor","random","defineRangeNumber","nbResults","console","log","rangewidth","numberToRandom","ceil","min","defineRequestUrl","calories","ingredients","diet","rangeRequest","callApi","url","getNumRecipes","getApiDatas","get","then","res","data","count","catch","e","hits","submitForm","preventDefault","handleChange","value","target","toLowerCase","id","map","label","image"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nconst intolerable = [\"gluten-free\", \"wheat-free\", \"egg-free\", \"peanut-free\", \"tree-nut-free\",\n  \"soy-free\", \"fish-free\", \"shellfish-free\", \"pork-free\", \"sesame-free\", \"alcohol-free\", \"sulphite-free\", \"dairy-free\"]\nconst specialDiet = [\"vegetarian\", \"pescatarian\", \"kosher\", \"vegan\"]\n\nconst RecipeSearch = () => {\n\n  const [numOfResult, setNumOfResult] = useState(0)\n  const [userIngredient1, setUserIngredient1] = useState('')\n  const [userIngredient2, setUserIngredient2] = useState('')\n  const [userIngredient3, setUserIngredient3] = useState('')\n  const [userCalories, setUserCalories] = useState(0)\n  const [userDiets, setUserDiets] = useState('')\n  const [errorRequest, setErrorRequest] = useState(false)\n  const [recipe, SetRecipes] = useState([])\n\n  // Generate a random number\n  const getRandomNumber = (max) => Math.floor(Math.random() * Math.floor(max))\n  //Define the range of search for the api request\n  const defineRangeNumber = (nbResults) => {\n    console.log(nbResults, \"firstresult\")\n    const rangewidth = 10\n    const numberToRandom = getRandomNumber(Math.ceil(nbResults / rangewidth))\n    console.log(numberToRandom, \"numberRandom\")\n    const max = (numberToRandom * rangewidth) + rangewidth > nbResults ? nbResults - 1 : (numberToRandom * rangewidth) + rangewidth\n    console.log(max, \"max\")\n    const min = max - rangewidth < 0 ? 0 : max - rangewidth\n    return `&from=${min}&to=${max}`\n  }\n\n  const defineRequestUrl = (nbResults) => {\n    nbResults = nbResults > 100 ? 100 : nbResults\n    const calories = userCalories && `&calories=${userCalories}`\n    const ingredients = userIngredient1 && `${userIngredient1},${userIngredient2},${userIngredient3}`\n    const diet = userDiets && `&health=${userDiets}`\n    console.log(diet, \"diet\")\n    const rangeRequest = nbResults ? defineRangeNumber(nbResults) : ''\n    // url which will be send to the API request\n    return `https://api.edamam.com/search?q=${ingredients}${calories}${rangeRequest}${diet}&app_id=812f083c&app_key=57cd06930f1a1d5818380b512897cc58`\n\n  }\n\n  // We verify if the number of results are define\n  const callApi = (url) => numOfResult === 0 ? getNumRecipes(url) : getApiDatas(url)\n  // If the number of result is unknown, we go fetch it\n  const getNumRecipes = (url) => {\n    axios.get(url)\n      .then((res) => {\n        console.log(res.data.count, \"first\")\n        setNumOfResult(res.data.count)\n        getApiDatas(defineRequestUrl(res.data.count))\n      })\n      .catch(e => setErrorRequest(\"Error, please check your ingredients\"))\n  }\n  // Else we fetch the datas\n  const getApiDatas = (url) => {\n    axios.get(url)\n      .then(res => {\n        console.log(res.data.hits, \"hits\")\n        SetRecipes(res.data.hits)\n      })\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault()\n    callApi(defineRequestUrl())\n  }\n\n  const handleChange = (e) => {\n    const value = (e.target.value).toLowerCase()\n    switch (e.target.id) {\n      case \"userIngredient1\":\n        setUserIngredient1(value)\n        break\n      case \"userIngredient2\":\n        setUserIngredient2(value)\n        break\n      case \"userIngredient3\":\n        setUserIngredient3(value)\n        break\n      case \"userCalories\":\n        setUserCalories(e.target.value)\n        break\n      case \"specialDiets\":\n        setUserDiets(e.target.value)\n        break\n      default:\n    }\n  }\n\n  return (\n    <div className='recipeSearch'>\n      <h2>Recipe by ingredient</h2>\n      <h3>What do you have in your fridge?</h3>\n      <div className='ingredientSearch'>\n        <form onSubmit={submitForm} class=\"form-example\">\n          <label htmlFor='userIngredient1'></label>\n          <input onChange={handleChange} id='userIngredient1' type='text' placeholder='first ingredient' required pattern=\"[A-Za-z]+\"></input>\n\n          <label htmlFor='userIngredient2'></label>\n          <input onChange={handleChange} id='userIngredient2' type='text' placeholder='second ingredient' />\n\n          <label htmlFor='userIngredient3'></label>\n          <input onChange={handleChange} id='userIngredient3' type='text' placeholder='third ingredient' />\n          <div>{errorRequest}</div>\n          <div>\n            <select id=\"specialDiets\" name=\"specialDiets\" onChange={handleChange}>\n              <option selected>Specify a special diet</option>\n              {specialDiet.map(diet => <option key={diet} value={diet}>{diet}</option>)}\n            </select><br />\n            <select id=\"intolerable\" name=\"intolerable\" multiple size=\"3\">\n              <option selected>If intolerable</option>\n              {intolerable.map(diet => <option key={diet}>{diet}</option>)}\n            </select>\n          </div>\n          <label htmlFor=\"userCalories\">Number of minimum calories:</label>\n          <input onChange={handleChange} type=\"range\" id=\"userCalories\" name=\"userCalories\" min=\"0\" max=\"10000\" step=\"5000\" />{userCalories}\n          <p>{numOfResult} recettes trouvées !</p>\n          <div><input className=\"submit\" type=\"submit\" value=\"Get recipe\"></input></div>\n        </form>\n        {recipe[0] &&\n          <>\n            <fieldset>\n              <legend>Other recipes</legend>\n              <ul>{recipe && recipe.map((e, id) => <li key={id}>{e.recipe.label}</li>)}</ul>\n            </fieldset>\n            <h3>{recipe[0].recipe.label}</h3>\n            <p><img src={recipe[0].recipe.image} alt={recipe[0].recipe.label} /></p>\n          </>\n        }\n\n      </div>\n    </div>\n  )\n}\n\nexport default RecipeSearch"]},"metadata":{},"sourceType":"module"}