{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/Calculator.js\";\nimport React from 'react';\nimport './Calculator.css';\nimport balance2 from '../images/balance2.png';\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userWeight: null,\n      weightToReach: null,\n      motivation: \"0\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        userWeight: event.target.value,\n        weightToReach: parseInt(this.state.userWeight) < 35 ? /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 68\n          }\n        }, \"Children are not allowed to play this game !\") : // this.state.userWeight <= 0 ? (<p>No</p>) : \n        parseInt(event.target.value) + parseInt(event.target.value * 0.2)\n      });\n    };\n\n    this.weightChange = () => {\n      this.setState({\n        weightToReach: parseInt(this.state.userWeight) + this.state.userWeight * 0.2 + ' kg'\n      });\n    };\n\n    this.getWeightToReach = userWeight => {\n      if (userWeight < 0) {\n        return this.setState({\n          weightToReach: 'Enter a positive number'\n        });\n      } else if (userWeight < 35 && userWeight > 0) {\n        return this.setState({\n          weightToReach: ' Children are not allowed to play this game !'\n        });\n      } else {\n        return this.motivationLevel();\n      }\n    };\n\n    this.getMotivation = event => {\n      this.setState({\n        motivation: event.target.value\n      }, () => this.getWeightToReach(this.state.userWeight));\n    };\n\n    this.motivationLevel = () => {\n      const motiv = this.state.motivation;\n      const strToNum = parseInt(this.state.userWeight);\n\n      if (motiv === \"0\") {\n        this.setState({\n          weightToReach: strToNum + strToNum * 0.1 + ' kg'\n        });\n      } else if (motiv === \"50\") {\n        this.setState({\n          weightToReach: strToNum + strToNum * 0.2 + ' kg'\n        });\n      } else {\n        this.setState({\n          weightToReach: strToNum + strToNum * 0.3 + ' kg'\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"calculator-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Please enter your weight:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"userWeight\",\n      value: this.state.userWeight,\n      onChange: this.handleChange,\n      placeholder: \"   In Kg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Calculate\",\n      className: \"buttonCalculator\",\n      onClick: this.weightChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"balance-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Press the cat to calculate your goal\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"balance-image\",\n      src: balance2,\n      alt: \"balance\",\n      onClick: this.weightChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Current weight: \", this.state.userWeight, \" kg\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"motiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Motivation level\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"slider\",\n      onChange: this.getMotivation,\n      id: \"motivationBar\",\n      type: \"range\",\n      min: \"0\",\n      step: \"50\",\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"goal\",\n      value: this.state.weightToReach,\n      onChange: this.weightChange,\n      className: \"goal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Your goal : \", this.state.weightToReach))));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/Calculator.js"],"names":["React","balance2","Calculator","Component","state","userWeight","weightToReach","motivation","handleChange","event","setState","target","value","parseInt","weightChange","getWeightToReach","motivationLevel","getMotivation","motiv","strToNum","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Calculator.css'\nimport balance2 from '../images/balance2.png'\n\nclass Calculator extends React.Component {\n    state = {\n        userWeight: null,\n        weightToReach: null,\n        motivation: \"0\"\n    }\n\n\n    handleChange = (event) => {\n        this.setState({ \n            userWeight: (event.target.value),\n            weightToReach: parseInt(this.state.userWeight) < 35 ? (<p>Children are not allowed to play this game !</p>) :\n            // this.state.userWeight <= 0 ? (<p>No</p>) : \n            (parseInt(event.target.value) + parseInt(event.target.value *0.2))\n         })\n    }\n\n    weightChange = () => {\n        this.setState({ weightToReach: parseInt(this.state.userWeight) + this.state.userWeight * 0.2 + ' kg' })\n    }\n\n    getWeightToReach = (userWeight) => {\n        if (userWeight < 0) {\n            return this.setState({ weightToReach: 'Enter a positive number' })\n        } else if (userWeight < 35 && userWeight > 0) {\n            return this.setState({ weightToReach: ' Children are not allowed to play this game !' })\n        }\n        else {\n            return this.motivationLevel()\n        }\n    }\n\n    getMotivation = (event) => {\n        this.setState({ motivation: event.target.value },\n            () => this.getWeightToReach(this.state.userWeight))\n    }\n\n    motivationLevel = () => {\n        const motiv = this.state.motivation\n        const strToNum = parseInt(this.state.userWeight)\n        if (motiv === \"0\") {\n            this.setState({ weightToReach: strToNum + strToNum * 0.1 + ' kg' })\n        } else if (motiv === \"50\") {\n            this.setState({ weightToReach: strToNum + strToNum * 0.2 + ' kg' })\n        } else {\n            this.setState({ weightToReach: strToNum + strToNum * 0.3 + ' kg' })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"calculator\">\n                <form className='calculator-form'>\n                    <label>Please enter your weight:</label>\n                    <input\n                            type='number'\n                            className=\"userWeight\"\n                            value={this.state.userWeight}\n                            onChange={this.handleChange}\n                            placeholder=\"   In Kg\">\n                    </input>\n                    <input type=\"button\" value=\"Calculate\" className=\"buttonCalculator\" onClick={this.weightChange} />\n                        <p className=\"balance-image\">Press the cat to calculate your goal</p>\n                        <img className=\"balance-image\" src={balance2} alt='balance' onClick={this.weightChange}/>\n                    <p>Current weight: {this.state.userWeight} kg</p>\n                    <div className=\"motiv\">\n                        <label>Motivation level</label>\n                        <input\n                            className=\"slider\"\n                            onChange={this.getMotivation}\n                            id=\"motivationBar\"\n                            type=\"range\"\n                            min=\"0\"\n                            step=\"50\"\n                            max=\"100\"\n                        />\n                    <p className=\"goal\" value={this.state.weightToReach} onChange={this.weightChange} className=\"goal\">Your goal : {this.state.weightToReach}</p>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Calculator"]},"metadata":{},"sourceType":"module"}