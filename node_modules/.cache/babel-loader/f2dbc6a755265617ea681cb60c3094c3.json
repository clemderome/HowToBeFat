{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/RecipeSearch.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Form from './recipeSearch/Form';\nconst intolerables = [\"peanut-free\", \"tree-nut-free\", \"alcohol-free\", \"sugar-conscious\"];\nconst specialDiet = [\"vegetarian\", \"vegan\"];\n\nconst RecipeSearch = () => {\n  // Define the states variables with useState hooks\n  const [numOfResult, setNumOfResult] = useState(0);\n  const [userIngredient1, setUserIngredient1] = useState('');\n  const [userIngredient2, setUserIngredient2] = useState('');\n  const [userIngredient3, setUserIngredient3] = useState('');\n  const [userExcludeIngredient1, setUserExcludeIngredient1] = useState('');\n  const [userExcludeIngredient2, setUserExcludeIngredient2] = useState('');\n  const [userExcludeIngredient3, setUserExcludeIngredient3] = useState('');\n  const [userCalories, setUserCalories] = useState(0);\n  const [userPreparationTime, setUserPreparationTime] = useState(0);\n  const [userDiets, setUserDiets] = useState('');\n  const [userIntolerables, setUserIntolerables] = useState([]);\n  const [errorRequest, setErrorRequest] = useState(false);\n  const [recipe, SetRecipes] = useState([]); // Generate a random number\n\n  const getRandomNumber = max => Math.floor(Math.random() * Math.floor(max)); //Define the range of search for the api request\n\n\n  const defineRangeNumber = nbResults => {\n    const rangewidth = 10;\n    const numberToRandom = getRandomNumber(Math.ceil(nbResults / rangewidth));\n    const max = numberToRandom * rangewidth + rangewidth > nbResults ? nbResults - 1 : numberToRandom * rangewidth + rangewidth;\n    const min = max - rangewidth < 0 ? 0 : max - rangewidth;\n    return `&from=${min}&to=${max}`;\n  }; // Add the optionnal searches to the url request in depend of the users selected options\n\n\n  const defineRequestUrl = nbResults => {\n    nbResults = nbResults > 100 ? 100 : nbResults;\n    const calories = userCalories && `&calories=${userCalories}%2B`;\n    const preparationTime = userPreparationTime && `&time=1-${userPreparationTime}`;\n    const ingredients = userIngredient1 && `${userIngredient1},${userIngredient2},${userIngredient3}`;\n    const excludes = `&excluded=${userExcludeIngredient1}&excluded=${userExcludeIngredient2}&excluded=${userExcludeIngredient3}`;\n    const diet = userDiets && `&health=${userDiets}`;\n    let intolerables = \"\";\n\n    if (userIntolerables) {\n      userIntolerables.filter(x => x !== \"\").map(intolerable => intolerables += `&health=${intolerable}`);\n    }\n\n    const rangeRequest = numOfResult ? defineRangeNumber(numOfResult) : nbResults ? defineRangeNumber(nbResults) : ''; // url which will be send to the API request\n\n    return `https://api.edamam.com/search?q=${ingredients}${calories}${rangeRequest}${diet}${intolerables}${excludes}${preparationTime}&app_id=812f083c&app_key=57cd06930f1a1d5818380b512897cc58`;\n  }; // We verify if the number of results are define\n\n\n  const callApi = url => numOfResult === 0 ? getNumRecipes(url) : getApiDatas(url); // If the number of result is unknown, we go fetch it\n\n\n  const getNumRecipes = url => {\n    axios.get(url).then(res => {\n      setNumOfResult(0);\n      setNumOfResult(res.data.count);\n      getApiDatas(defineRequestUrl(res.data.count));\n    }).catch(e => setErrorRequest(\"Error, please check your ingredients\"));\n  }; // Else we fetch the datas\n\n\n  const getApiDatas = url => {\n    axios.get(url).then(res => {\n      SetRecipes(res.data.hits);\n      setErrorRequest(false);\n    }).catch(e => setErrorRequest(\"Error, please contact administrator\"));\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    callApi(defineRequestUrl());\n  };\n\n  const handleChange = e => {\n    const value = e.target.value.toLowerCase();\n\n    switch (e.target.id) {\n      case \"ingredient1\":\n        setUserIngredient1(value);\n        break;\n\n      case \"ingredient2\":\n        setUserIngredient2(value);\n        break;\n\n      case \"ingredient3\":\n        setUserIngredient3(value);\n        break;\n\n      case \"excludedIngredient1\":\n        setUserExcludeIngredient1(value);\n        break;\n\n      case \"excludedIngredient2\":\n        setUserExcludeIngredient2(value);\n        break;\n\n      case \"excludedIngredient3\":\n        setUserExcludeIngredient3(value);\n        break;\n\n      case \"calories\":\n        setUserCalories(e.target.value);\n        break;\n\n      case \"time\":\n        setUserPreparationTime(e.target.value);\n        break;\n\n      case \"specialDiets\":\n        setUserDiets(e.target.value);\n        break;\n\n      case \"intolerables\":\n        const selectedValues = [...e.target.options].filter(x => x.selected && x.value !== \"If intolerable\").map(x => x.value);\n        setUserIntolerables(selectedValues);\n        break;\n\n      default:\n    }\n  };\n\n  const getPreparationTime = time => {\n    const hours = time > 60 ? Math.floor(time / 60) : 0;\n    const unity = hours > 1 ? \"hours\" : \"hour\";\n    const minutes = time > 60 ? time % 60 : time;\n    return time > 60 ? `${hours} ${unity} and ${minutes} minutes` : `${minutes} minutes`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipeSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Recipe by ingredient\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"What do you have in your fridge?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredientSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    class: \"form-example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    handleChange: handleChange,\n    submitForm: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"1em\",\n      color: \"red\",\n      \"font-weight\": \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, errorRequest), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"intolerables\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Select intolerable\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"intolerables\",\n    name: \"intolerables\",\n    multiple: true,\n    size: \"5\",\n    onChange: handleChange,\n    style: {\n      margin: \"1em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, intolerables.map(intolerable => /*#__PURE__*/React.createElement(\"option\", {\n    key: intolerable,\n    value: intolerable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 48\n    }\n  }, intolerable)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"calories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Number of minimum calories:\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"range\",\n    id: \"calories\",\n    min: \"0\",\n    max: \"100000\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), userCalories, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Maximum of preparation time :\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    value: userPreparationTime,\n    type: \"range\",\n    id: \"time\",\n    start: \"0\",\n    min: \"0\",\n    max: \"240\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), getPreparationTime(userPreparationTime), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, numOfResult, \" recettes trouv\\xE9es !\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"submit\",\n    type: \"submit\",\n    value: \"Get recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 16\n    }\n  }))), recipe[0] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Other recipes\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, recipe && recipe.map((e, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 52\n    }\n  }, e.recipe.label)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, recipe[0].recipe.label), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: recipe[0].recipe.image,\n    alt: recipe[0].recipe.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, recipe[0].recipe.calories), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, recipe[0].recipe.totalTime))));\n};\n\nexport default RecipeSearch;","map":{"version":3,"sources":["/Users/citrounette/Documents/Projets/WCS_Project_2/paris-0320-project2-howToBeFat/src/components/RecipeSearch.js"],"names":["React","useState","useEffect","axios","Form","intolerables","specialDiet","RecipeSearch","numOfResult","setNumOfResult","userIngredient1","setUserIngredient1","userIngredient2","setUserIngredient2","userIngredient3","setUserIngredient3","userExcludeIngredient1","setUserExcludeIngredient1","userExcludeIngredient2","setUserExcludeIngredient2","userExcludeIngredient3","setUserExcludeIngredient3","userCalories","setUserCalories","userPreparationTime","setUserPreparationTime","userDiets","setUserDiets","userIntolerables","setUserIntolerables","errorRequest","setErrorRequest","recipe","SetRecipes","getRandomNumber","max","Math","floor","random","defineRangeNumber","nbResults","rangewidth","numberToRandom","ceil","min","defineRequestUrl","calories","preparationTime","ingredients","excludes","diet","filter","x","map","intolerable","rangeRequest","callApi","url","getNumRecipes","getApiDatas","get","then","res","data","count","catch","e","hits","submitForm","preventDefault","handleChange","value","target","toLowerCase","id","selectedValues","options","selected","getPreparationTime","time","hours","unity","minutes","padding","color","margin","label","image","totalTime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Form from './recipeSearch/Form'\n\nconst intolerables = [\"peanut-free\", \"tree-nut-free\", \"alcohol-free\", \"sugar-conscious\"]\nconst specialDiet = [\"vegetarian\", \"vegan\"]\n\nconst RecipeSearch = () => {\n\n  // Define the states variables with useState hooks\n  const [numOfResult, setNumOfResult] = useState(0)\n  const [userIngredient1, setUserIngredient1] = useState('')\n  const [userIngredient2, setUserIngredient2] = useState('')\n  const [userIngredient3, setUserIngredient3] = useState('')\n  const [userExcludeIngredient1, setUserExcludeIngredient1] = useState('')\n  const [userExcludeIngredient2, setUserExcludeIngredient2] = useState('')\n  const [userExcludeIngredient3, setUserExcludeIngredient3] = useState('')\n  const [userCalories, setUserCalories] = useState(0)\n  const [userPreparationTime, setUserPreparationTime] = useState(0)\n  const [userDiets, setUserDiets] = useState('')\n  const [userIntolerables, setUserIntolerables] = useState([])\n  const [errorRequest, setErrorRequest] = useState(false)\n  const [recipe, SetRecipes] = useState([])\n\n  // Generate a random number\n  const getRandomNumber = (max) => Math.floor(Math.random() * Math.floor(max))\n  //Define the range of search for the api request\n  const defineRangeNumber = (nbResults) => {\n    const rangewidth = 10\n    const numberToRandom = getRandomNumber(Math.ceil(nbResults / rangewidth))\n    const max = (numberToRandom * rangewidth) + rangewidth > nbResults ? nbResults - 1 : (numberToRandom * rangewidth) + rangewidth\n    const min = max - rangewidth < 0 ? 0 : max - rangewidth\n    return `&from=${min}&to=${max}`\n  }\n\n  // Add the optionnal searches to the url request in depend of the users selected options\n  const defineRequestUrl = (nbResults) => {\n    nbResults = nbResults > 100 ? 100 : nbResults\n    const calories = userCalories && `&calories=${userCalories}%2B`\n    const preparationTime = userPreparationTime && `&time=1-${userPreparationTime}`\n    const ingredients = userIngredient1 && `${userIngredient1},${userIngredient2},${userIngredient3}`\n    const excludes = `&excluded=${userExcludeIngredient1}&excluded=${userExcludeIngredient2}&excluded=${userExcludeIngredient3}`\n    const diet = userDiets && `&health=${userDiets}`\n    let intolerables = \"\"\n    if (userIntolerables) {\n      userIntolerables.filter(x => x !== \"\").map(intolerable => intolerables += `&health=${intolerable}`)\n    }\n    const rangeRequest = numOfResult ? defineRangeNumber(numOfResult) : nbResults ? defineRangeNumber(nbResults) : ''\n    // url which will be send to the API request\n    return `https://api.edamam.com/search?q=${ingredients}${calories}${rangeRequest}${diet}${intolerables}${excludes}${preparationTime}&app_id=812f083c&app_key=57cd06930f1a1d5818380b512897cc58`\n  }\n\n  // We verify if the number of results are define\n  const callApi = (url) => numOfResult === 0 ? getNumRecipes(url) : getApiDatas(url)\n  // If the number of result is unknown, we go fetch it\n  const getNumRecipes = (url) => {\n    axios.get(url)\n      .then((res) => {\n        setNumOfResult(0)\n        setNumOfResult(res.data.count)\n        getApiDatas(defineRequestUrl(res.data.count))\n      })\n      .catch(e => setErrorRequest(\"Error, please check your ingredients\"))\n\n  }\n  // Else we fetch the datas\n  const getApiDatas = (url) => {\n    axios.get(url)\n      .then(res => {\n        SetRecipes(res.data.hits)\n        setErrorRequest(false)\n      })\n      .catch(e => setErrorRequest(\"Error, please contact administrator\"))\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault()\n    callApi(defineRequestUrl())\n  }\n\n  const handleChange = (e) => {\n    const value = e.target.value.toLowerCase()\n    switch (e.target.id) {\n      case \"ingredient1\":\n        setUserIngredient1(value)\n        break\n      case \"ingredient2\":\n        setUserIngredient2(value)\n        break\n      case \"ingredient3\":\n        setUserIngredient3(value)\n        break\n      case \"excludedIngredient1\":\n        setUserExcludeIngredient1(value)\n        break\n      case \"excludedIngredient2\":\n        setUserExcludeIngredient2(value)\n        break\n      case \"excludedIngredient3\":\n        setUserExcludeIngredient3(value)\n        break\n      case \"calories\":\n        setUserCalories(e.target.value)\n        break\n      case \"time\":\n        setUserPreparationTime(e.target.value)\n        break\n      case \"specialDiets\":\n        setUserDiets(e.target.value)\n        break\n      case \"intolerables\":\n        const selectedValues = [...e.target.options]\n          .filter((x) => x.selected && x.value !== \"If intolerable\")\n          .map((x) => x.value);\n        setUserIntolerables(selectedValues)\n        break\n      default:\n    }\n  }\n\n  const getPreparationTime = (time) => {\n    const hours = time > 60 ? Math.floor(time / 60) : 0\n    const unity = hours > 1 ? \"hours\" : \"hour\"\n    const minutes = time > 60 ? time % 60 : time\n    return time > 60 ? `${hours} ${unity} and ${minutes} minutes` : `${minutes} minutes`\n  }\n\n  return (\n    <div className='recipeSearch'>\n      <h2>Recipe by ingredient</h2>\n      <h3>What do you have in your fridge?</h3>\n      <div className='ingredientSearch'>\n        <form onSubmit={submitForm} class=\"form-example\">\n          <Form handleChange={handleChange} submitForm={submitForm} />\n          <div style={{ padding: \"1em\", color: \"red\", \"font-weight\": \"bold\" }}>\n            {errorRequest}\n          </div>\n          <div>\n            <label htmlFor=\"intolerables\">Select intolerable</label>\n            <br />\n            <select id=\"intolerables\" name=\"intolerables\" multiple size=\"5\" onChange={handleChange} style={{ margin: \"1em\" }}>\n              {intolerables.map(intolerable => <option key={intolerable} value={intolerable}>{intolerable}</option>)}\n            </select>\n          </div>\n          <label htmlFor=\"calories\">Number of minimum calories:</label>\n          <input onChange={handleChange} type=\"range\" id=\"calories\" min=\"0\" max=\"100000\" step=\"1\" />{userCalories}\n          <br />\n          <label htmlFor=\"time\">Maximum of preparation time :</label>\n          <input onChange={handleChange} value={userPreparationTime} type=\"range\" id=\"time\" start=\"0\" min=\"0\" max=\"240\" step=\"1\" />{getPreparationTime(userPreparationTime)}\n\n          <p>{numOfResult} recettes trouvées !</p>\n          <div><input className=\"submit\" type=\"submit\" value=\"Get recipe\"></input></div>\n        </form>\n\n        {recipe[0] &&\n          <>\n            <fieldset>\n              <legend>Other recipes</legend>\n              <ul>{recipe && recipe.map((e, id) => <li key={id}>{e.recipe.label}</li>)}</ul>\n            </fieldset>\n            <h3>{recipe[0].recipe.label}</h3>\n            <p><img src={recipe[0].recipe.image} alt={recipe[0].recipe.label} /></p>\n            <p>{recipe[0].recipe.calories}</p>\n            <p>{recipe[0].recipe.totalTime}</p>\n          </>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default RecipeSearch"]},"metadata":{},"sourceType":"module"}