{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/HTBF/src/components/DisplayRecipe.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './DisplayRecipe.css';\n\nclass DisplayRecipe extends React.Component {\n  render() {\n    const {\n      label,\n      image\n    } = { ...this.props.recipe\n    };\n    const calories = Math.round(this.props.calories / 1000);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DisplayRecipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, \" RECIPE OF THE DAY \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"recipeName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, label), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Number of calories:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 35\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"recipeName nbCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 42\n      }\n    }, calories), \" Kcal\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.getOtherRecipe,\n      className: \"button-recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, \"Show another one! \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button-recipe\",\n      value: \"See more infos...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/FullRecipeCard\",\n        data: {\n          recipe: this.props.recipe,\n          calories: this.props.calories,\n          ingredients: this.props.ingredientsList,\n          preparationTime: this.props.preparationTime\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"See more details ...\"))))));\n  }\n\n}\n\nDisplayRecipe.propTypes = {\n  recipe: PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  }),\n  calories: PropTypes.number.isRequired\n};\nexport default DisplayRecipe;","map":{"version":3,"sources":["/Users/citrounette/Documents/HTBF/src/components/DisplayRecipe.js"],"names":["React","Link","PropTypes","DisplayRecipe","Component","render","label","image","props","recipe","calories","Math","round","getOtherRecipe","pathname","data","ingredients","ingredientsList","preparationTime","propTypes","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAE1CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,EAAE,GAAG,KAAKC,KAAL,CAAWC;AAAhB,KAAzB;AACA,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKJ,KAAL,CAAWE,QAAX,GAAqB,IAAhC,CAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAK,MAAA,GAAG,EAAEH,KAAV;AAAiB,MAAA,GAAG,EAAC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,KAA3B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,oBAA6B;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCI,QAApC,CAA7B,UAFF,eAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,cAA5B;AAA4C,MAAA,SAAS,EAAC,eAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,KAAK,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACRC,QAAAA,QAAQ,EAAE,iBADF;AAERC,QAAAA,IAAI,EAAE;AACJN,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MADf;AAEJC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAFjB;AAGJM,UAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWS,eAHpB;AAIJC,UAAAA,eAAe,EAAE,KAAKV,KAAL,CAAWU;AAJxB;AAFE,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAFF,CAHF,CAHF,CADF,CADF;AA0BD;;AA/ByC;;AAkC5Cf,aAAa,CAACgB,SAAd,GAA0B;AACxBV,EAAAA,MAAM,EAAEP,SAAS,CAACkB,KAAV,CAAgB;AACtBb,IAAAA,KAAK,EAAEL,SAAS,CAACmB,MAAV,CAAiBC,UADF;AAEtBhB,IAAAA,KAAK,EAAEJ,SAAS,CAACmB,MAAV,CAAiBC;AAFF,GAAhB,CADgB;AAKxBZ,EAAAA,QAAQ,EAAER,SAAS,CAACqB,MAAV,CAAiBD;AALH,CAA1B;AAQA,eAAenB,aAAf","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport './DisplayRecipe.css'\n\nclass DisplayRecipe extends React.Component {\n\n  render() {\n    const { label, image } = { ...this.props.recipe }\n    const calories = Math.round(this.props.calories /1000) \n    return (\n      <div className=\"DisplayRecipe\">\n        <div className=\"card\">\n          <h2> RECIPE OF THE DAY </h2>\n          <img src={image} alt=\"\"></img>\n          <div className=\"container\">\n            <p className=\"recipeName\">{label}</p>\n            <p>Number of calories:<br /> <span className=\"recipeName nbCal\">{calories}</span> Kcal</p>\n            <div className=\"button\">\n              <button onClick={this.props.getOtherRecipe} className=\"button-recipe\">Show another one! </button>\n              <button className=\"button-recipe\" value=\"See more infos...\" >\n                <Link to={{\n                  pathname: \"/FullRecipeCard\",\n                  data: {\n                    recipe: this.props.recipe,\n                    calories: this.props.calories,\n                    ingredients: this.props.ingredientsList,\n                    preparationTime: this.props.preparationTime\n                  }\n                }} >See more details ...</Link>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nDisplayRecipe.propTypes = {\n  recipe: PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }),\n  calories: PropTypes.number.isRequired\n}\n\nexport default DisplayRecipe"]},"metadata":{},"sourceType":"module"}