{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/HTBF/src/components/recipeSearch/Form/FormExcludes.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FormIngredients.css';\n\nconst FormExcludes = props => {\n  const handleChange = props.handleChange;\n  const [ingredientShow, setIngredientShow] = useState({\n    ingredient1: false,\n    ingredient2: false,\n    ingredient3: false\n  });\n  const [addButton, setAddButton] = useState(true);\n\n  const handleShowInput = e => {\n    if (ingredientShow.ingredient2) {\n      setIngredientShow({ ...ingredientShow,\n        ingredient3: true\n      });\n      setAddButton(false);\n    } else if (ingredientShow.ingredient1) {\n      setIngredientShow({ ...ingredientShow,\n        ingredient2: true\n      });\n    } else {\n      setIngredientShow({ ...ingredientShow,\n        ingredient1: true\n      });\n    }\n  };\n\n  const handleHideInput = e => {\n    switch (e.target.id) {\n      case \"IngredientHideInput1\":\n        setIngredientShow({ ...ingredientShow,\n          ingredient1: false\n        });\n        setAddButton(true);\n        break;\n\n      case \"IngredientHideInput2\":\n        setIngredientShow({ ...ingredientShow,\n          ingredient2: false\n        });\n        break;\n\n      case \"IngredientHideInput3\":\n        setIngredientShow({ ...ingredientShow,\n          ingredient3: false\n        });\n        setAddButton(true);\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"flexIngredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"ingredientFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \" Exclude some ingredients \"), ingredientShow.ingredient1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"excludedIngredient1\",\n    id: \"labelIngredient1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Ingredient 1 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 85\n    }\n  }), !ingredientShow.ingredient2 && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"hideButton\",\n    onClick: handleHideInput,\n    id: \"IngredientHideInput1\",\n    name: \"IngredientHideInput1\",\n    value: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    id: \"excludedIngredient1\",\n    name: \"excludedIngredient1\",\n    type: \"text\",\n    pattern: \"[A-Za-z]+\",\n    className: \"inputTexte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }))), ingredientShow.ingredient2 && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"excludedIngredient2\",\n    id: \"labelIngredient2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Ingredient 2 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 83\n    }\n  }), !ingredientShow.ingredient3 && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"hideButton\",\n    onClick: handleHideInput,\n    id: \"IngredientHideInput2\",\n    value: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    id: \"excludedIngredient2\",\n    name: \"excludedIngredient2\",\n    type: \"text\",\n    pattern: \"[A-Za-z]+\",\n    className: \"inputTexte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), ingredientShow.ingredient3 && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"excludedIngredient3\",\n    id: \"labelIngredient3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Ingredient 3 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 83\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"hideButton\",\n    onClick: handleHideInput,\n    id: \"IngredientHideInput3\",\n    value: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    id: \"excludedIngredient3\",\n    name: \"excludedIngredient3\",\n    type: \"text\",\n    pattern: \"[A-Za-z]+\",\n    className: \"inputTexte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), addButton && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: handleShowInput,\n    value: \"Add an ingredient...\",\n    className: \"button-recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n};\n\nFormExcludes.propTypes = {\n  handleChange: PropTypes.func.isRequired\n};\nexport default FormExcludes;","map":{"version":3,"sources":["/Users/citrounette/Documents/HTBF/src/components/recipeSearch/Form/FormExcludes.js"],"names":["React","useState","PropTypes","FormExcludes","props","handleChange","ingredientShow","setIngredientShow","ingredient1","ingredient2","ingredient3","addButton","setAddButton","handleShowInput","e","handleHideInput","target","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './FormIngredients.css'\n\nconst FormExcludes = (props) => {\n\n  const handleChange = props.handleChange\n\n  const [ingredientShow, setIngredientShow] =\n    useState({\n      ingredient1: false,\n      ingredient2: false,\n      ingredient3: false\n    })\n  const [addButton, setAddButton] = useState(true)\n\n  const handleShowInput = (e) => {\n    if (ingredientShow.ingredient2) {\n      setIngredientShow({ ...ingredientShow, ingredient3: true })\n      setAddButton(false)\n    }\n    else if (ingredientShow.ingredient1) {\n      setIngredientShow({ ...ingredientShow, ingredient2: true })\n    }\n    else {\n      setIngredientShow({ ...ingredientShow, ingredient1: true })\n    }\n  }\n\n  const handleHideInput = (e) => {\n    switch (e.target.id) {\n      case \"IngredientHideInput1\":\n        setIngredientShow({ ...ingredientShow, ingredient1: false })\n        setAddButton(true)\n        break\n      case \"IngredientHideInput2\":\n        setIngredientShow({ ...ingredientShow, ingredient2: false })\n        break\n      case \"IngredientHideInput3\":\n        setIngredientShow({ ...ingredientShow, ingredient3: false })\n        setAddButton(true)\n        break\n      default:\n    }\n  }\n\n  return (\n    <article className=\"flexIngredients\">\n      <fieldset className=\"ingredientFilter\">\n        <legend> Exclude some ingredients </legend>\n        {\n          ingredientShow.ingredient1 &&\n          <>\n            <label htmlFor='excludedIngredient1' id=\"labelIngredient1\">Ingredient 1 <br />\n              {!ingredientShow.ingredient2 &&\n                <input type=\"button\" className=\"hideButton\" onClick={handleHideInput} id=\"IngredientHideInput1\" name=\"IngredientHideInput1\" value=\"-\" />\n              }\n              <input onChange={(e) => handleChange(e)} id='excludedIngredient1' name='excludedIngredient1' type='text' pattern=\"[A-Za-z]+\" className=\"inputTexte\" />\n            </label>\n          </>\n        }\n        {\n          ingredientShow.ingredient2 &&\n          <label htmlFor='excludedIngredient2' id=\"labelIngredient2\">Ingredient 2 <br />\n            {!ingredientShow.ingredient3 &&\n              <input type=\"button\" className=\"hideButton\" onClick={handleHideInput} id=\"IngredientHideInput2\" value=\"-\" />\n            }\n            <input onChange={(e) => handleChange(e)} id='excludedIngredient2' name='excludedIngredient2' type='text' pattern=\"[A-Za-z]+\" className=\"inputTexte\" />\n          </label>\n        }\n        {\n          ingredientShow.ingredient3 &&\n          <label htmlFor='excludedIngredient3' id=\"labelIngredient3\">Ingredient 3 <br />\n            <input type=\"button\" className=\"hideButton\" onClick={handleHideInput} id=\"IngredientHideInput3\" value=\"-\" />\n            <input onChange={(e) => handleChange(e)} id='excludedIngredient3' name=\"excludedIngredient3\" type='text' pattern=\"[A-Za-z]+\" className=\"inputTexte\" />\n          </label>\n        }\n        {\n          addButton &&\n          <input type=\"button\" onClick={handleShowInput} value=\"Add an ingredient...\" className=\"button-recipe\" />\n        }\n      </fieldset>\n    </article>\n  )\n}\n\nFormExcludes.propTypes = {\n  handleChange: PropTypes.func.isRequired\n}\n\nexport default FormExcludes"]},"metadata":{},"sourceType":"module"}