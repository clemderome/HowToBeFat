{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/HTBF/src/components/recipeSearch/DisplayResults/RecipesDesktop.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './RecipesDesktop.css';\n\nconst RecipesDesktop = props => {\n  const {\n    recipes,\n    display,\n    handleClick,\n    side\n  } = { ...props\n  };\n\n  const defineClass = bool => {\n    const className = ['miniRecipes'];\n\n    if (bool) {\n      className.push('selected');\n    }\n\n    return className.join(' ');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${side}Flex`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, recipes.map(recipe => {\n    const id = recipe.recipe.uri;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      id: id,\n      className: defineClass(id === display),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: id,\n      src: recipe.recipe.image,\n      alt: recipe.recipe.label,\n      onClick: e => handleClick(e),\n      title: recipe.recipe.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nRecipesDesktop.prototype = {\n  recipe: PropTypes.arrayOf(Object).isRequired,\n  display: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  side: PropTypes.string.isRequired\n};\nexport default RecipesDesktop;","map":{"version":3,"sources":["/Users/citrounette/Documents/HTBF/src/components/recipeSearch/DisplayResults/RecipesDesktop.js"],"names":["React","PropTypes","RecipesDesktop","props","recipes","display","handleClick","side","defineClass","bool","className","push","join","map","recipe","id","uri","image","label","e","prototype","arrayOf","Object","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAEhC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAA0C,EAAE,GAAGJ;AAAL,GAAhD;;AAEA,QAAMK,WAAW,GAAIC,IAAD,IAAU;AAC5B,UAAMC,SAAS,GAAG,CAAC,aAAD,CAAlB;;AACA,QAAID,IAAJ,EAAU;AACRC,MAAAA,SAAS,CAACC,IAAV,CAAe,UAAf;AACD;;AACD,WAAOD,SAAS,CAACE,IAAV,CAAe,GAAf,CAAP;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEL,IAAK,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,OAAO,CAACS,GAAR,CAAYC,MAAM,IAAI;AACpB,UAAMC,EAAE,GAAGD,MAAM,CAACA,MAAP,CAAcE,GAAzB;AACA,wBACE;AAAK,MAAA,GAAG,EAAED,EAAV;AAAc,MAAA,EAAE,EAAEA,EAAlB;AACE,MAAA,SAAS,EAEPP,WAAW,CAACO,EAAE,KAAKV,OAAR,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAK,MAAA,EAAE,EAAEU,EAAT;AAAa,MAAA,GAAG,EAAED,MAAM,CAACA,MAAP,CAAcG,KAAhC;AAAuC,MAAA,GAAG,EAAEH,MAAM,CAACA,MAAP,CAAcI,KAA1D;AAAiE,MAAA,OAAO,EAAGC,CAAD,IAAOb,WAAW,CAACa,CAAD,CAA5F;AAAiG,MAAA,KAAK,EAAEL,MAAM,CAACA,MAAP,CAAcI,KAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD,GAXD,CAFJ,CADF;AAkBD,CA9BD;;AAgCAhB,cAAc,CAACkB,SAAf,GAA2B;AACzBN,EAAAA,MAAM,EAAEb,SAAS,CAACoB,OAAV,CAAkBC,MAAlB,EAA0BC,UADT;AAEzBlB,EAAAA,OAAO,EAAEJ,SAAS,CAACuB,MAAV,CAAiBD,UAFD;AAGzBjB,EAAAA,WAAW,EAAEL,SAAS,CAACwB,IAAV,CAAeF,UAHH;AAIzBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,MAAV,CAAiBD;AAJE,CAA3B;AAMA,eAAerB,cAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './RecipesDesktop.css'\n\nconst RecipesDesktop = (props) => {\n\n  const { recipes, display, handleClick, side } = { ...props }\n\n  const defineClass = (bool) => {\n    const className = ['miniRecipes']\n    if (bool) {\n      className.push('selected')\n    }\n    return className.join(' ')\n  }\n\n  return (\n    <div className={`${side}Flex`}>\n      {\n        recipes.map(recipe => {\n          const id = recipe.recipe.uri\n          return (\n            <div key={id} id={id}\n              className=\n              {\n                defineClass(id === display)\n              }>\n              <img id={id} src={recipe.recipe.image} alt={recipe.recipe.label} onClick={(e) => handleClick(e)} title={recipe.recipe.label} />\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nRecipesDesktop.prototype = {\n  recipe: PropTypes.arrayOf(Object).isRequired,\n  display: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  side: PropTypes.string.isRequired\n}\nexport default RecipesDesktop"]},"metadata":{},"sourceType":"module"}