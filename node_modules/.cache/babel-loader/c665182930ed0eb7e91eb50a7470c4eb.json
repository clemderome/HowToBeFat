{"ast":null,"code":"var _jsxFileName = \"/Users/citrounette/Documents/HTBF/src/components/recipeSearch/Form/FormIngredients.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FormIngredients.css';\n\nconst FormIngredients = props => {\n  const handleChange = props.handleChange;\n  const [ingredientShow, setIngredientShow] = useState({\n    ingredient1: true,\n    ingredient2: false,\n    ingredient3: false\n  });\n  const [addButton, setAddButton] = useState(true);\n\n  const handleShowInput = e => {\n    if (ingredientShow.ingredient2) {\n      setIngredientShow({ ...ingredientShow,\n        ingredient3: true\n      });\n      setAddButton(false);\n    } else {\n      setIngredientShow({ ...ingredientShow,\n        ingredient2: true\n      });\n    }\n  };\n\n  const handleHideInput = e => {\n    if (e.target.id === \"IngredientHideInput2\") {\n      setIngredientShow({ ...ingredientShow,\n        ingredient2: false\n      });\n    } else {\n      setIngredientShow({ ...ingredientShow,\n        ingredient3: false\n      });\n      setAddButton(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"flexIngredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"ingredientFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Search by ingredients\"), ingredientShow.ingredient1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient1\",\n    id: \"labelIngredient1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"* Ingredient 1 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 79\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    id: \"ingredient1\",\n    name: \"ingredient1\",\n    type: \"text\",\n    pattern: \"[A-Za-z]+\",\n    className: \"inputTexte\",\n    \"aria-required\": \"true\",\n    title: \"This element is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }))), ingredientShow.ingredient2 && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient2\",\n    id: \"labelIngredient2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Ingredient 2 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 75\n    }\n  }), !ingredientShow.ingredient3 && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"hideButton\",\n    onClick: handleHideInput,\n    id: \"IngredientHideInput2\",\n    value: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    id: \"ingredient2\",\n    name: \"ingredient2\",\n    type: \"text\",\n    pattern: \"[A-Za-z]+\",\n    className: \"inputTexte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), ingredientShow.ingredient3 && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient3\",\n    id: \"labelIngredient3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Ingredient 3 \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 75\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"hideButton\",\n    onClick: handleHideInput,\n    id: \"IngredientHideInput3\",\n    value: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    id: \"ingredient3\",\n    name: \"ingredient3\",\n    type: \"text\",\n    pattern: \"[A-Za-z]+\",\n    className: \"inputTexte\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), addButton && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: handleShowInput,\n    value: \"Add an ingredient...\",\n    className: \"button-recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })));\n};\n\nFormIngredients.propTypes = {\n  handleChange: PropTypes.func.isRequired\n};\nexport default FormIngredients;","map":{"version":3,"sources":["/Users/citrounette/Documents/HTBF/src/components/recipeSearch/Form/FormIngredients.js"],"names":["React","useState","PropTypes","FormIngredients","props","handleChange","ingredientShow","setIngredientShow","ingredient1","ingredient2","ingredient3","addButton","setAddButton","handleShowInput","e","handleHideInput","target","id","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './FormIngredients.css'\n\nconst FormIngredients = (props) => {\n\n  const handleChange = props.handleChange\n\n  const [ingredientShow, setIngredientShow] =\n    useState({\n      ingredient1: true,\n      ingredient2: false,\n      ingredient3: false\n    })\n  const [addButton, setAddButton] = useState(true)\n\n  const handleShowInput = (e) => {\n    if (ingredientShow.ingredient2) {\n      setIngredientShow({ ...ingredientShow, ingredient3: true })\n      setAddButton(false)\n    } else {\n      setIngredientShow({ ...ingredientShow, ingredient2: true })\n    }\n  }\n\n  const handleHideInput = (e) => {\n    if (e.target.id === \"IngredientHideInput2\") {\n      setIngredientShow({ ...ingredientShow, ingredient2: false })\n    } else {\n      setIngredientShow({ ...ingredientShow, ingredient3: false })\n      setAddButton(true)\n    }\n  }\n\n  return (\n    <article className=\"flexIngredients\">\n      <fieldset className=\"ingredientFilter\">\n        <legend>Search by ingredients</legend>\n        {\n          ingredientShow.ingredient1 &&\n          <>\n            <label htmlFor='ingredient1' id=\"labelIngredient1\">* Ingredient 1 <br />\n              <input onChange={(e) => handleChange(e)} id='ingredient1' name='ingredient1' type='text' pattern=\"[A-Za-z]+\" className=\"inputTexte\" aria-required=\"true\" title=\"This element is required\" />\n            </label>\n          </>\n        }\n        {\n          ingredientShow.ingredient2 &&\n          <label htmlFor='ingredient2' id=\"labelIngredient2\">Ingredient 2 <br />\n            {!ingredientShow.ingredient3 &&\n              <input type=\"button\" className=\"hideButton\" onClick={handleHideInput} id=\"IngredientHideInput2\" value=\"-\" />\n            }\n            <input onChange={(e) => handleChange(e)} id='ingredient2' name=\"ingredient2\" type='text' pattern=\"[A-Za-z]+\" className=\"inputTexte\" />\n          </label>\n        }\n        {\n          ingredientShow.ingredient3 &&\n          <label htmlFor='ingredient3' id=\"labelIngredient3\">Ingredient 3 <br />\n            <input type=\"button\" className=\"hideButton\" onClick={handleHideInput} id=\"IngredientHideInput3\" value=\"-\" />\n            <input onChange={(e) => handleChange(e)} id='ingredient3' name=\"ingredient3\" type='text' pattern=\"[A-Za-z]+\" className=\"inputTexte\" />\n          </label>\n        }\n        {\n          addButton &&\n          <input type=\"button\" onClick={handleShowInput} value=\"Add an ingredient...\" className=\"button-recipe\" />\n        }\n      </fieldset>\n    </article>\n  )\n}\n\nFormIngredients.propTypes = {\n  handleChange: PropTypes.func.isRequired\n}\n\nexport default FormIngredients"]},"metadata":{},"sourceType":"module"}